{
    "sourceFile": "app/login_and_reg/plogin.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1743947071878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743948754537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,97 +1,164 @@\n import React, { useState } from \"react\";\r\n-import { View, Text, TouchableOpacity, StyleSheet, Dimensions, TextInput, StatusBar } from \"react-native\";\r\n-import { MaterialIcons } from \"@expo/vector-icons\"; \r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TouchableOpacity,\r\n+  StyleSheet,\r\n+  Dimensions,\r\n+  TextInput,\r\n+  StatusBar,\r\n+} from \"react-native\";\r\n+import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n-export default function welcome() {\r\n-  const [email, setEmail] = useState(\"\"); // Store user email\r\n-  const [pass, setPass] = useState(\"\"); // Store user password\r\n-  const [isEditing, setIsEditing] = useState(false); \r\n+export default function PLogin() {\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [pass, setPass] = useState(\"\");\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const router = useRouter();\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n-      <View style={{paddingTop: 40}}>\r\n-        <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\r\n-      </View>\r\n-      <View style={styles.content}>\r\n-        <TouchableOpacity onPress={() => router.push(\"/location/welcome\")}>\r\n-          <Text style={styles.back}>Back</Text>\r\n+      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n+      <View style={styles.inner}>\r\n+        <TouchableOpacity onPress={() => router.back()}>\r\n+          <Text style={styles.back}>← Back</Text>\r\n         </TouchableOpacity>\r\n+\r\n         <Text style={styles.title}>Sign in with your registered email or phone number</Text>\r\n+\r\n         <View style={styles.inputContainer}>\r\n           <TextInput\r\n             style={styles.input}\r\n             placeholder=\"Email or Phone Number\"\r\n             placeholderTextColor=\"#A0A0A0\"\r\n             value={email}\r\n             onChangeText={setEmail}\r\n-            editable={isEditing}\r\n           />\r\n         </View>\r\n+\r\n         <View style={styles.inputContainer}>\r\n           <TextInput\r\n             style={styles.input}\r\n             placeholder=\"Enter Your Password\"\r\n             placeholderTextColor=\"#A0A0A0\"\r\n+            secureTextEntry={!isPasswordVisible}\r\n             value={pass}\r\n             onChangeText={setPass}\r\n-            editable={isEditing}\r\n           />\r\n-          <TouchableOpacity onPress={() => setIsEditing(true)}>\r\n-            <MaterialIcons name=\"edit\" size={20} color=\"#5089A3\" />\r\n+          <TouchableOpacity onPress={() => setIsPasswordVisible(prev => !prev)}>\r\n+            <MaterialIcons\r\n+              name={isPasswordVisible ? \"visibility\" : \"visibility-off\"}\r\n+              size={20}\r\n+              color=\"#A0A0A0\"\r\n+            />\r\n           </TouchableOpacity>\r\n         </View>\r\n+\r\n+        <TouchableOpacity style={styles.forgot}>\r\n+          <Text style={styles.forgotText}>Forget password?</Text>\r\n+        </TouchableOpacity>\r\n+\r\n+        <TouchableOpacity style={styles.signInBtn}>\r\n+          <Text style={styles.signInText}>Sign In</Text>\r\n+        </TouchableOpacity>\r\n+\r\n+        <View style={styles.divider}>\r\n+          <View style={styles.line} />\r\n+          <Text style={styles.orText}>or</Text>\r\n+          <View style={styles.line} />\r\n+        </View>\r\n+\r\n+        <Text style={styles.signupPrompt}>\r\n+          Don't have an account?{\" \"}\r\n+          <Text style={styles.signupLink} onPress={() => router.push(\"/register\")}>\r\n+            Sign Up\r\n+          </Text>\r\n+        </Text>\r\n       </View>\r\n     </View>\r\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n-    backgroundColor: \"white\",\r\n+    backgroundColor: \"#fff\",\r\n     alignItems: \"center\",\r\n   },\r\n-  content: {\r\n-    width: width * 0.8,\r\n-    alignItems: \"center\",\r\n+  inner: {\r\n+    width: width * 0.85,\r\n+    paddingTop: 60,\r\n   },\r\n   back: {\r\n-    padding: 10,\r\n-    fontSize: 18,\r\n-    fontFamily: \"Poppins-Regular\",\r\n+    fontSize: 16,\r\n     color: \"#414141\",\r\n-    letterSpacing: 1,\r\n-    marginLeft: -20,\r\n+    marginBottom: 20,\r\n   },\r\n   title: {\r\n-    fontSize: 22,\r\n+    fontSize: 20,\r\n+    color: \"#414141\",\r\n     fontWeight: \"600\",\r\n-    color: \"#414141\",\r\n-    marginLeft: -20,\r\n+    marginBottom: 30,\r\n   },\r\n-  subtitle: {\r\n-    fontSize: 16,\r\n-    color: \"#A0A0A0\",\r\n-    textAlign: \"center\",\r\n-    marginTop: 5,\r\n-  },\r\n   inputContainer: {\r\n     flexDirection: \"row\",\r\n     alignItems: \"center\",\r\n     borderWidth: 1,\r\n     borderColor: \"#D1D1D1\",\r\n     borderRadius: 8,\r\n     paddingHorizontal: 10,\r\n-    width: \"100%\",\r\n-    marginTop: 20,\r\n+    height: 48,\r\n+    marginBottom: 15,\r\n   },\r\n   input: {\r\n     flex: 1,\r\n-    height: 40,\r\n     fontSize: 16,\r\n     color: \"#414141\",\r\n   },\r\n+  forgot: {\r\n+    alignSelf: \"flex-end\",\r\n+    marginBottom: 30,\r\n+  },\r\n+  forgotText: {\r\n+    color: \"#DD1F1F\",\r\n+    fontSize: 13,\r\n+  },\r\n+  signInBtn: {\r\n+    backgroundColor: \"#5089A3\",\r\n+    borderRadius: 8,\r\n+    paddingVertical: 14,\r\n+    alignItems: \"center\",\r\n+    marginBottom: 25,\r\n+  },\r\n+  signInText: {\r\n+    color: \"#fff\",\r\n+    fontSize: 16,\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  divider: {\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\",\r\n+    marginBottom: 25,\r\n+  },\r\n+  line: {\r\n+    flex: 1,\r\n+    height: 1,\r\n+    backgroundColor: \"#D1D1D1\",\r\n+  },\r\n+  orText: {\r\n+    marginHorizontal: 10,\r\n+    color: \"#A0A0A0\",\r\n+  },\r\n+  signupPrompt: {\r\n+    textAlign: \"center\",\r\n+    fontSize: 14,\r\n+    color: \"#414141\",\r\n+  },\r\n+  signupLink: {\r\n+    color: \"#5089A3\",\r\n+    fontWeight: \"600\",\r\n+  },\r\n });\r\n"
                },
                {
                    "date": 1743948762181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n           <View style={styles.line} />\r\n         </View>\r\n \r\n         <Text style={styles.signupPrompt}>\r\n-          Don't have an account?{\" \"}\r\n+          Dont have an account?{\" \"}\r\n           <Text style={styles.signupLink} onPress={() => router.push(\"/register\")}>\r\n             Sign Up\r\n           </Text>\r\n         </Text>\r\n"
                },
                {
                    "date": 1743948789215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,10 @@\n           <View style={styles.line} />\r\n         </View>\r\n \r\n         <Text style={styles.signupPrompt}>\r\n-          Dont have an account?{\" \"}\r\n-          <Text style={styles.signupLink} onPress={() => router.push(\"/register\")}>\r\n+          Don't have an account?{\" \"}\r\n+          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/pregister\")}>\r\n             Sign Up\r\n           </Text>\r\n         </Text>\r\n       </View>\r\n"
                },
                {
                    "date": 1743948823634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n       <View style={styles.inner}>\r\n         <TouchableOpacity onPress={() => router.back()}>\r\n-          <Text style={styles.back}>← Back</Text>\r\n+          <Text style={styles.back}>Back</Text>\r\n         </TouchableOpacity>\r\n \r\n         <Text style={styles.title}>Sign in with your registered email or phone number</Text>\r\n \r\n"
                },
                {
                    "date": 1743953377471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,12 @@\n   StyleSheet,\r\n   Dimensions,\r\n   TextInput,\r\n   StatusBar,\r\n+  Alert, // To show alerts on login failure\r\n } from \"react-native\";\r\n+import { auth } from \"../database/firebase-config\";\r\n+import { signInWithEmailAndPassword } from \"firebase/auth\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n \r\n const { width } = Dimensions.get(\"window\");\r\n@@ -18,8 +21,21 @@\n   const [pass, setPass] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const router = useRouter();\r\n \r\n+  // Login function\r\n+  const loginUser = async () => {\r\n+    try {\r\n+      const userCredential = await signInWithEmailAndPassword(auth, email, pass);\r\n+      console.log(\"Logged in user:\", userCredential.user);\r\n+      // Navigate to the home screen or dashboard after successful login\r\n+      router.push(\"/home\"); // Replace with your actual home route\r\n+    } catch (error) {\r\n+      console.error(\"Login error:\", error.message);\r\n+      Alert.alert(\"Login Failed\", error.message); // Show error message if login fails\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n       <View style={styles.inner}>\r\n@@ -60,9 +76,9 @@\n         <TouchableOpacity style={styles.forgot}>\r\n           <Text style={styles.forgotText}>Forget password?</Text>\r\n         </TouchableOpacity>\r\n \r\n-        <TouchableOpacity style={styles.signInBtn}>\r\n+        <TouchableOpacity style={styles.signInBtn} onPress={loginUser}>\r\n           <Text style={styles.signInText}>Sign In</Text>\r\n         </TouchableOpacity>\r\n \r\n         <View style={styles.divider}>\r\n"
                },
                {
                    "date": 1743953466232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,13 +27,14 @@\n     try {\r\n       const userCredential = await signInWithEmailAndPassword(auth, email, pass);\r\n       console.log(\"Logged in user:\", userCredential.user);\r\n       // Navigate to the home screen or dashboard after successful login\r\n-      router.push(\"/home\"); // Replace with your actual home route\r\n-    } catch (error) {\r\n-      console.error(\"Login error:\", error.message);\r\n-      Alert.alert(\"Login Failed\", error.message); // Show error message if login fails\r\n-    }\r\n+      router.push(\"../index\"); // Replace with your actual home route\r\n+    } catch (error: any) {\r\n+      console.error(\"Login error:\", error);\r\n+      const errorMessage = error?.message || \"An error occurred during login\";\r\n+      Alert.alert(\"Login Failed\", errorMessage); // Show error message if login fails\r\n+    }    \r\n   };\r\n \r\n   return (\r\n     <View style={styles.container}>\r\n"
                },
                {
                    "date": 1745770233911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,13 @@\n   StyleSheet,\r\n   Dimensions,\r\n   TextInput,\r\n   StatusBar,\r\n-  Alert, // To show alerts on login failure\r\n+  Alert,\r\n } from \"react-native\";\r\n-import { auth } from \"../database/firebase-config\";\r\n-import { signInWithEmailAndPassword } from \"firebase/auth\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n+import API_BASE_URL from \"../../config\"; // 🔥 make sure you have this\r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n export default function PLogin() {\r\n@@ -21,20 +20,34 @@\n   const [pass, setPass] = useState(\"\");\r\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const router = useRouter();\r\n \r\n-  // Login function\r\n   const loginUser = async () => {\r\n     try {\r\n-      const userCredential = await signInWithEmailAndPassword(auth, email, pass);\r\n-      console.log(\"Logged in user:\", userCredential.user);\r\n-      // Navigate to the home screen or dashboard after successful login\r\n-      router.push(\"../index\"); // Replace with your actual home route\r\n+      const response = await fetch(`${API_BASE_URL}/api/auth/passenger/login`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email, password: pass }),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+\r\n+      if (response.ok) {\r\n+        Alert.alert(\"Login Successful\", \"Welcome!\");\r\n+        console.log(\"Passenger ID:\", data.userId);\r\n+\r\n+        // TODO: Save passenger ID if you want (AsyncStorage or Context)\r\n+\r\n+        router.push(\"../index\"); // Replace with your real homepage later\r\n+      } else {\r\n+        Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n+      }\r\n+\r\n     } catch (error: any) {\r\n       console.error(\"Login error:\", error);\r\n       const errorMessage = error?.message || \"An error occurred during login\";\r\n-      Alert.alert(\"Login Failed\", errorMessage); // Show error message if login fails\r\n-    }    \r\n+      Alert.alert(\"Login Failed\", errorMessage);\r\n+    }\r\n   };\r\n \r\n   return (\r\n     <View style={styles.container}>\r\n@@ -43,14 +56,14 @@\n         <TouchableOpacity onPress={() => router.back()}>\r\n           <Text style={styles.back}>Back</Text>\r\n         </TouchableOpacity>\r\n \r\n-        <Text style={styles.title}>Sign in with your registered email or phone number</Text>\r\n+        <Text style={styles.title}>Sign in with your email or phone</Text>\r\n \r\n         <View style={styles.inputContainer}>\r\n           <TextInput\r\n             style={styles.input}\r\n-            placeholder=\"Email or Phone Number\"\r\n+            placeholder=\"Email or Phone\"\r\n             placeholderTextColor=\"#A0A0A0\"\r\n             value={email}\r\n             onChangeText={setEmail}\r\n           />\r\n@@ -99,28 +112,12 @@\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n-  container: {\r\n-    flex: 1,\r\n-    backgroundColor: \"#fff\",\r\n-    alignItems: \"center\",\r\n-  },\r\n-  inner: {\r\n-    width: width * 0.85,\r\n-    paddingTop: 60,\r\n-  },\r\n-  back: {\r\n-    fontSize: 16,\r\n-    color: \"#414141\",\r\n-    marginBottom: 20,\r\n-  },\r\n-  title: {\r\n-    fontSize: 20,\r\n-    color: \"#414141\",\r\n-    fontWeight: \"600\",\r\n-    marginBottom: 30,\r\n-  },\r\n+  container: { flex: 1, backgroundColor: \"#fff\", alignItems: \"center\" },\r\n+  inner: { width: width * 0.85, paddingTop: 60 },\r\n+  back: { fontSize: 16, color: \"#414141\", marginBottom: 20 },\r\n+  title: { fontSize: 20, color: \"#414141\", fontWeight: \"600\", marginBottom: 30 },\r\n   inputContainer: {\r\n     flexDirection: \"row\",\r\n     alignItems: \"center\",\r\n     borderWidth: 1,\r\n@@ -129,53 +126,21 @@\n     paddingHorizontal: 10,\r\n     height: 48,\r\n     marginBottom: 15,\r\n   },\r\n-  input: {\r\n-    flex: 1,\r\n-    fontSize: 16,\r\n-    color: \"#414141\",\r\n-  },\r\n-  forgot: {\r\n-    alignSelf: \"flex-end\",\r\n-    marginBottom: 30,\r\n-  },\r\n-  forgotText: {\r\n-    color: \"#DD1F1F\",\r\n-    fontSize: 13,\r\n-  },\r\n+  input: { flex: 1, fontSize: 16, color: \"#414141\" },\r\n+  forgot: { alignSelf: \"flex-end\", marginBottom: 30 },\r\n+  forgotText: { color: \"#DD1F1F\", fontSize: 13 },\r\n   signInBtn: {\r\n     backgroundColor: \"#5089A3\",\r\n     borderRadius: 8,\r\n     paddingVertical: 14,\r\n     alignItems: \"center\",\r\n     marginBottom: 25,\r\n   },\r\n-  signInText: {\r\n-    color: \"#fff\",\r\n-    fontSize: 16,\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  divider: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n-    marginBottom: 25,\r\n-  },\r\n-  line: {\r\n-    flex: 1,\r\n-    height: 1,\r\n-    backgroundColor: \"#D1D1D1\",\r\n-  },\r\n-  orText: {\r\n-    marginHorizontal: 10,\r\n-    color: \"#A0A0A0\",\r\n-  },\r\n-  signupPrompt: {\r\n-    textAlign: \"center\",\r\n-    fontSize: 14,\r\n-    color: \"#414141\",\r\n-  },\r\n-  signupLink: {\r\n-    color: \"#5089A3\",\r\n-    fontWeight: \"600\",\r\n-  },\r\n+  signInText: { color: \"#fff\", fontSize: 16, fontWeight: \"bold\" },\r\n+  divider: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 25 },\r\n+  line: { flex: 1, height: 1, backgroundColor: \"#D1D1D1\" },\r\n+  orText: { marginHorizontal: 10, color: \"#A0A0A0\" },\r\n+  signupPrompt: { textAlign: \"center\", fontSize: 14, color: \"#414141\" },\r\n+  signupLink: { color: \"#5089A3\", fontWeight: \"600\" },\r\n });\r\n"
                },
                {
                    "date": 1745770397238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         console.log(\"Passenger ID:\", data.userId);\r\n \r\n         // TODO: Save passenger ID if you want (AsyncStorage or Context)\r\n \r\n-        router.push(\"../index\"); // Replace with your real homepage later\r\n+        router.push(\"../homepassenger/phome\"); // Replace with your real homepage later\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n \r\n"
                },
                {
                    "date": 1745770971239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,28 +27,35 @@\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email, password: pass }),\r\n       });\r\n-\r\n-      const data = await response.json();\r\n-\r\n+  \r\n+      const text = await response.text();  // 🔥 Read it as plain text first\r\n+  \r\n+      console.log(\"Raw server response:\", text);  // 🔥 Debug print to see what server replied\r\n+  \r\n+      let data;\r\n+      try {\r\n+        data = JSON.parse(text);  // 🔥 Then try to parse it safely\r\n+      } catch (jsonError) {\r\n+        console.error(\"Server did not return JSON:\", text);\r\n+        throw new Error(\"Invalid server response: not JSON\");\r\n+      }\r\n+  \r\n       if (response.ok) {\r\n         Alert.alert(\"Login Successful\", \"Welcome!\");\r\n         console.log(\"Passenger ID:\", data.userId);\r\n-\r\n-        // TODO: Save passenger ID if you want (AsyncStorage or Context)\r\n-\r\n-        router.push(\"../homepassenger/phome\"); // Replace with your real homepage later\r\n+        router.push(\"../homepassenger/phome\");\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n-\r\n+  \r\n     } catch (error: any) {\r\n-      console.error(\"Login error:\", error);\r\n+      console.error(\"Login error (catch block):\", error);\r\n       const errorMessage = error?.message || \"An error occurred during login\";\r\n       Alert.alert(\"Login Failed\", errorMessage);\r\n     }\r\n-  };\r\n+  };  \r\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n"
                },
                {
                    "date": 1745800418315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   const router = useRouter();\r\n \r\n   const loginUser = async () => {\r\n     try {\r\n-      const response = await fetch(`${API_BASE_URL}/api/auth/passenger/login`, {\r\n+      const response = await fetch(`${API_BASE_URL}/api/login/passenger/login`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email, password: pass }),\r\n       });\r\n"
                },
                {
                    "date": 1746361788613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   Alert,\r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n-import API_BASE_URL from \"../../config\"; // 🔥 make sure you have this\r\n+import {API_BASE_URL} from \"../../config\"; // 🔥 make sure you have this\r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n export default function PLogin() {\r\n@@ -22,8 +22,9 @@\n   const router = useRouter();\r\n \r\n   const loginUser = async () => {\r\n     try {\r\n+      console.log(\"API_BASE_URL is\", API_BASE_URL);\r\n       const response = await fetch(`${API_BASE_URL}/api/login/passenger/login`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email, password: pass }),\r\n"
                },
                {
                    "date": 1747658850148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n   Alert,\r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n-import {API_BASE_URL} from \"../../config\"; // 🔥 make sure you have this\r\n+import {API_BASE_URL} from \"../../config\";\r\n+import AsyncStorage from '@react-native-async-storage/async-storage';\r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n export default function PLogin() {\r\n@@ -40,8 +41,17 @@\n       } catch (jsonError) {\r\n         console.error(\"Server did not return JSON:\", text);\r\n         throw new Error(\"Invalid server response: not JSON\");\r\n       }\r\n+\r\n+      if (response.ok && data.userId) {\r\n+        await AsyncStorage.setItem(\"passengerId\", data.userId);\r\n+        Alert.alert(\"Login Successful\", \"Welcome!\");\r\n+        router.push(\"../homepassenger/phome\");\r\n+      } else {\r\n+        Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n+      }\r\n+\r\n   \r\n       if (response.ok) {\r\n         Alert.alert(\"Login Successful\", \"Welcome!\");\r\n         console.log(\"Passenger ID:\", data.userId);\r\n"
                },
                {
                    "date": 1747658870388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,19 +43,19 @@\n         throw new Error(\"Invalid server response: not JSON\");\r\n       }\r\n \r\n       if (response.ok && data.userId) {\r\n-        await AsyncStorage.setItem(\"passengerId\", data.userId);\r\n+        \r\n         Alert.alert(\"Login Successful\", \"Welcome!\");\r\n         router.push(\"../homepassenger/phome\");\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n \r\n   \r\n       if (response.ok) {\r\n+        await AsyncStorage.setItem(\"passengerId\", data.userId);\r\n         Alert.alert(\"Login Successful\", \"Welcome!\");\r\n-        console.log(\"Passenger ID:\", data.userId);\r\n         router.push(\"../homepassenger/phome\");\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n"
                },
                {
                    "date": 1747658881827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,17 +41,8 @@\n       } catch (jsonError) {\r\n         console.error(\"Server did not return JSON:\", text);\r\n         throw new Error(\"Invalid server response: not JSON\");\r\n       }\r\n-\r\n-      if (response.ok && data.userId) {\r\n-        \r\n-        Alert.alert(\"Login Successful\", \"Welcome!\");\r\n-        router.push(\"../homepassenger/phome\");\r\n-      } else {\r\n-        Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n-      }\r\n-\r\n   \r\n       if (response.ok) {\r\n         await AsyncStorage.setItem(\"passengerId\", data.userId);\r\n         Alert.alert(\"Login Successful\", \"Welcome!\");\r\n"
                },
                {
                    "date": 1748322049915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   Dimensions,\r\n   TextInput,\r\n   StatusBar,\r\n   Alert,\r\n+  Keyboard\r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n import {API_BASE_URL} from \"../../config\";\r\n"
                },
                {
                    "date": 1748322066185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const router = useRouter();\r\n \r\n   const loginUser = async () => {\r\n+    Keyboard.dismiss();\r\n     try {\r\n       console.log(\"API_BASE_URL is\", API_BASE_URL);\r\n       const response = await fetch(`${API_BASE_URL}/api/login/passenger/login`, {\r\n         method: \"POST\",\r\n"
                },
                {
                    "date": 1748456714264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n       <View style={styles.inner}>\r\n-        <TouchableOpacity onPress={() => router.back()}>\r\n+        <TouchableOpacity onPress={() => router.push(\"../location/welcome\")}>\r\n           <Text style={styles.back}>Back</Text>\r\n         </TouchableOpacity>\r\n \r\n         <Text style={styles.title}>Sign in with your email or phone</Text>\r\n"
                }
            ],
            "date": 1743947071878,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet, Dimensions, TextInput, StatusBar } from \"react-native\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\"; \r\nimport { useRouter } from \"expo-router\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nexport default function welcome() {\r\n  const [email, setEmail] = useState(\"\"); // Store user email\r\n  const [pass, setPass] = useState(\"\"); // Store user password\r\n  const [isEditing, setIsEditing] = useState(false); \r\n  const router = useRouter();\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{paddingTop: 40}}>\r\n        <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor=\"transparent\" />\r\n      </View>\r\n      <View style={styles.content}>\r\n        <TouchableOpacity onPress={() => router.push(\"/location/welcome\")}>\r\n          <Text style={styles.back}>Back</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.title}>Sign in with your registered email or phone number</Text>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Email or Phone Number\"\r\n            placeholderTextColor=\"#A0A0A0\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            editable={isEditing}\r\n          />\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter Your Password\"\r\n            placeholderTextColor=\"#A0A0A0\"\r\n            value={pass}\r\n            onChangeText={setPass}\r\n            editable={isEditing}\r\n          />\r\n          <TouchableOpacity onPress={() => setIsEditing(true)}>\r\n            <MaterialIcons name=\"edit\" size={20} color=\"#5089A3\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n  },\r\n  content: {\r\n    width: width * 0.8,\r\n    alignItems: \"center\",\r\n  },\r\n  back: {\r\n    padding: 10,\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Regular\",\r\n    color: \"#414141\",\r\n    letterSpacing: 1,\r\n    marginLeft: -20,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: \"600\",\r\n    color: \"#414141\",\r\n    marginLeft: -20,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: \"#A0A0A0\",\r\n    textAlign: \"center\",\r\n    marginTop: 5,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderWidth: 1,\r\n    borderColor: \"#D1D1D1\",\r\n    borderRadius: 8,\r\n    paddingHorizontal: 10,\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    fontSize: 16,\r\n    color: \"#414141\",\r\n  },\r\n});\r\n"
        }
    ]
}