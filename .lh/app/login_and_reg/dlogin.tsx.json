{
    "sourceFile": "app/login_and_reg/dlogin.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1743946962801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743947124434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,10 @@\n+import React from 'react';\r\n+import { View, Text } from 'react-native';\r\n+\r\n+export default function DLogin() {\r\n+  return (\r\n+    <View>\r\n+      <Text>DLogin Screen Placeholder</Text>\r\n+    </View>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1745800592424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,135 @@\n-import React from 'react';\r\n-import { View, Text } from 'react-native';\r\n+import React, { useState } from \"react\";\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TouchableOpacity,\r\n+  StyleSheet,\r\n+  Dimensions,\r\n+  TextInput,\r\n+  StatusBar,\r\n+  Alert,\r\n+} from \"react-native\";\r\n+import { MaterialIcons } from \"@expo/vector-icons\";\r\n+import { useRouter } from \"expo-router\";\r\n+import API_BASE_URL from \"../../config\"; // ðŸ”¥ make sure correct\r\n \r\n+const { width } = Dimensions.get(\"window\");\r\n+\r\n export default function DLogin() {\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [pass, setPass] = useState(\"\");\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const router = useRouter();\r\n+\r\n+  const loginDriver = async () => {\r\n+    try {\r\n+      const response = await fetch(`${API_BASE_URL}/api/auth/driver/login`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email, password: pass }),\r\n+      });\r\n+\r\n+      const text = await response.text();\r\n+      let data;\r\n+      try {\r\n+        data = JSON.parse(text);\r\n+      } catch (e) {\r\n+        console.error(\"Server did not return JSON:\", text);\r\n+        throw new Error(\"Invalid server response: not JSON\");\r\n+      }\r\n+\r\n+      if (response.ok) {\r\n+        Alert.alert(\"Login Successful\", `Welcome, ${data.userType}!`);\r\n+        console.log(\"User ID:\", data.userId);\r\n+        console.log(\"User Type:\", data.userType);\r\n+\r\n+        // TODO: Save userId + userType if needed (AsyncStorage or Context)\r\n+\r\n+        router.push(\"../homeDriver/dhome\"); // Temporary driver homepage\r\n+      } else {\r\n+        Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n+      }\r\n+\r\n+    } catch (error: any) {\r\n+      console.error(\"Login error (catch block):\", error);\r\n+      Alert.alert(\"Login Failed\", error.message || \"Network/server error\");\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <View>\r\n-      <Text>DLogin Screen Placeholder</Text>\r\n+    <View style={styles.container}>\r\n+      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n+      <View style={styles.inner}>\r\n+        <TouchableOpacity onPress={() => router.back()}>\r\n+          <Text style={styles.back}>Back</Text>\r\n+        </TouchableOpacity>\r\n+\r\n+        <Text style={styles.title}>Sign in with your Driver or Operator account</Text>\r\n+\r\n+        <View style={styles.inputContainer}>\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Email\"\r\n+            placeholderTextColor=\"#A0A0A0\"\r\n+            value={email}\r\n+            onChangeText={setEmail}\r\n+          />\r\n+        </View>\r\n+\r\n+        <View style={styles.inputContainer}>\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Enter Your Password\"\r\n+            placeholderTextColor=\"#A0A0A0\"\r\n+            secureTextEntry={!isPasswordVisible}\r\n+            value={pass}\r\n+            onChangeText={setPass}\r\n+          />\r\n+          <TouchableOpacity onPress={() => setIsPasswordVisible(prev => !prev)}>\r\n+            <MaterialIcons\r\n+              name={isPasswordVisible ? \"visibility\" : \"visibility-off\"}\r\n+              size={20}\r\n+              color=\"#A0A0A0\"\r\n+            />\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+\r\n+        <TouchableOpacity style={styles.forgot}>\r\n+          <Text style={styles.forgotText}>Forget password?</Text>\r\n+        </TouchableOpacity>\r\n+\r\n+        <TouchableOpacity style={styles.signInBtn} onPress={loginDriver}>\r\n+          <Text style={styles.signInText}>Sign In</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n     </View>\r\n   );\r\n }\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { flex: 1, backgroundColor: \"#fff\", alignItems: \"center\" },\r\n+  inner: { width: width * 0.85, paddingTop: 60 },\r\n+  back: { fontSize: 16, color: \"#414141\", marginBottom: 20 },\r\n+  title: { fontSize: 20, color: \"#414141\", fontWeight: \"600\", marginBottom: 30 },\r\n+  inputContainer: {\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#D1D1D1\",\r\n+    borderRadius: 8,\r\n+    paddingHorizontal: 10,\r\n+    height: 48,\r\n+    marginBottom: 15,\r\n+  },\r\n+  input: { flex: 1, fontSize: 16, color: \"#414141\" },\r\n+  forgot: { alignSelf: \"flex-end\", marginBottom: 30 },\r\n+  forgotText: { color: \"#DD1F1F\", fontSize: 13 },\r\n+  signInBtn: {\r\n+    backgroundColor: \"#5089A3\",\r\n+    borderRadius: 8,\r\n+    paddingVertical: 14,\r\n+    alignItems: \"center\",\r\n+    marginBottom: 25,\r\n+  },\r\n+  signInText: { color: \"#fff\", fontSize: 16, fontWeight: \"bold\" },\r\n+});\r\n"
                },
                {
                    "date": 1745800634603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         console.log(\"User Type:\", data.userType);\r\n \r\n         // TODO: Save userId + userType if needed (AsyncStorage or Context)\r\n \r\n-        router.push(\"../homeDriver/dhome\"); // Temporary driver homepage\r\n+        router.push(\"../homedriver/dhome\"); // Temporary driver homepage\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n \r\n"
                },
                {
                    "date": 1745800795917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   Alert,\r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n-import API_BASE_URL from \"../../config\"; // ðŸ”¥ make sure correct\r\n+import API_BASE_URL from \"../../config\"; \r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n export default function DLogin() {\r\n@@ -22,9 +22,9 @@\n   const router = useRouter();\r\n \r\n   const loginDriver = async () => {\r\n     try {\r\n-      const response = await fetch(`${API_BASE_URL}/api/auth/driver/login`, {\r\n+      const response = await fetch(`${API_BASE_URL}/api/login/driver/login`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email, password: pass }),\r\n       });\r\n@@ -44,9 +44,9 @@\n         console.log(\"User Type:\", data.userType);\r\n \r\n         // TODO: Save userId + userType if needed (AsyncStorage or Context)\r\n \r\n-        router.push(\"../homedriver/dhome\"); // Temporary driver homepage\r\n+        router.push(\"../homedriver/dhome\"); \r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n \r\n"
                },
                {
                    "date": 1745800983823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,8 +100,20 @@\n \r\n         <TouchableOpacity style={styles.signInBtn} onPress={loginDriver}>\r\n           <Text style={styles.signInText}>Sign In</Text>\r\n         </TouchableOpacity>\r\n+        <View style={styles.divider}>\r\n+          <View style={styles.line} />\r\n+          <Text style={styles.orText}>or</Text>\r\n+          <View style={styles.line} />\r\n+        </View>\r\n+\r\n+        <Text style={styles.signupPrompt}>\r\n+          Don't have an account?{\" \"}\r\n+          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/pregister\")}>\r\n+            Sign Up\r\n+          </Text>\r\n+        </Text>\r\n       </View>\r\n     </View>\r\n   );\r\n }\r\n@@ -131,5 +143,10 @@\n     alignItems: \"center\",\r\n     marginBottom: 25,\r\n   },\r\n   signInText: { color: \"#fff\", fontSize: 16, fontWeight: \"bold\" },\r\n+  divider: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 25 },\r\n+  line: { flex: 1, height: 1, backgroundColor: \"#D1D1D1\" },\r\n+  orText: { marginHorizontal: 10, color: \"#A0A0A0\" },\r\n+  signupPrompt: { textAlign: \"center\", fontSize: 14, color: \"#414141\" },\r\n+  signupLink: { color: \"#5089A3\", fontWeight: \"600\" },\r\n });\r\n"
                },
                {
                    "date": 1745800999167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n         </View>\r\n \r\n         <Text style={styles.signupPrompt}>\r\n           Don't have an account?{\" \"}\r\n-          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/pregister\")}>\r\n+          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dregister\")}>\r\n             Sign Up\r\n           </Text>\r\n         </Text>\r\n       </View>\r\n"
                },
                {
                    "date": 1745812718724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,150 @@\n+import React, { useState } from \"react\";\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TouchableOpacity,\r\n+  StyleSheet,\r\n+  Dimensions,\r\n+  TextInput,\r\n+  StatusBar,\r\n+  Alert,\r\n+} from \"react-native\";\r\n+import { MaterialIcons } from \"@expo/vector-icons\";\r\n+import { useRouter } from \"expo-router\";\r\n+import API_BASE_URL from \"../../config\"; \r\n+\r\n+const { width } = Dimensions.get(\"window\");\r\n+\r\n+export default function DLogin() {\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [pass, setPass] = useState(\"\");\r\n+  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n+  const router = useRouter();\r\n+\r\n+  const loginDriver = async () => {\r\n+    try {\r\n+      const response = await fetch(`${API_BASE_URL}/api/login/driver/login`, {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email, password: pass }),\r\n+      });\r\n+\r\n+      const text = await response.text();\r\n+      let data;\r\n+      try {\r\n+        data = JSON.parse(text);\r\n+      } catch (e) {\r\n+        console.error(\"Server did not return JSON:\", text);\r\n+        throw new Error(\"Invalid server response: not JSON\");\r\n+      }\r\n+\r\n+      if (response.ok) {\r\n+        Alert.alert(\"Login Successful\", `Welcome!`);\r\n+\r\n+        // TODO: Save userId + userType if needed (AsyncStorage or Context)\r\n+\r\n+        router.push(\"../homedriver/dhome\"); \r\n+      } else {\r\n+        Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n+      }\r\n+\r\n+    } catch (error: any) {\r\n+      console.error(\"Login error (catch block):\", error);\r\n+      Alert.alert(\"Login Failed\", error.message || \"Network/server error\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <View style={styles.container}>\r\n+      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n+      <View style={styles.inner}>\r\n+        <TouchableOpacity onPress={() => router.back()}>\r\n+          <Text style={styles.back}>Back</Text>\r\n+        </TouchableOpacity>\r\n+\r\n+        <Text style={styles.title}>Sign in with your Driver or Operator account</Text>\r\n+\r\n+        <View style={styles.inputContainer}>\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Email\"\r\n+            placeholderTextColor=\"#A0A0A0\"\r\n+            value={email}\r\n+            onChangeText={setEmail}\r\n+          />\r\n+        </View>\r\n+\r\n+        <View style={styles.inputContainer}>\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Enter Your Password\"\r\n+            placeholderTextColor=\"#A0A0A0\"\r\n+            secureTextEntry={!isPasswordVisible}\r\n+            value={pass}\r\n+            onChangeText={setPass}\r\n+          />\r\n+          <TouchableOpacity onPress={() => setIsPasswordVisible(prev => !prev)}>\r\n+            <MaterialIcons\r\n+              name={isPasswordVisible ? \"visibility\" : \"visibility-off\"}\r\n+              size={20}\r\n+              color=\"#A0A0A0\"\r\n+            />\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+\r\n+        <TouchableOpacity style={styles.forgot}>\r\n+          <Text style={styles.forgotText}>Forget password?</Text>\r\n+        </TouchableOpacity>\r\n+\r\n+        <TouchableOpacity style={styles.signInBtn} onPress={loginDriver}>\r\n+          <Text style={styles.signInText}>Sign In</Text>\r\n+        </TouchableOpacity>\r\n+        <View style={styles.divider}>\r\n+          <View style={styles.line} />\r\n+          <Text style={styles.orText}>or</Text>\r\n+          <View style={styles.line} />\r\n+        </View>\r\n+\r\n+        <Text style={styles.signupPrompt}>\r\n+          Don't have an account?{\" \"}\r\n+          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dregister\")}>\r\n+            Sign Up\r\n+          </Text>\r\n+        </Text>\r\n+      </View>\r\n+    </View>\r\n+  );\r\n+}\r\n+\r\n+const styles = StyleSheet.create({\r\n+  container: { flex: 1, backgroundColor: \"#fff\", alignItems: \"center\" },\r\n+  inner: { width: width * 0.85, paddingTop: 60 },\r\n+  back: { fontSize: 16, color: \"#414141\", marginBottom: 20 },\r\n+  title: { fontSize: 20, color: \"#414141\", fontWeight: \"600\", marginBottom: 30 },\r\n+  inputContainer: {\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#D1D1D1\",\r\n+    borderRadius: 8,\r\n+    paddingHorizontal: 10,\r\n+    height: 48,\r\n+    marginBottom: 15,\r\n+  },\r\n+  input: { flex: 1, fontSize: 16, color: \"#414141\" },\r\n+  forgot: { alignSelf: \"flex-end\", marginBottom: 30 },\r\n+  forgotText: { color: \"#DD1F1F\", fontSize: 13 },\r\n+  signInBtn: {\r\n+    backgroundColor: \"#5089A3\",\r\n+    borderRadius: 8,\r\n+    paddingVertical: 14,\r\n+    alignItems: \"center\",\r\n+    marginBottom: 25,\r\n+  },\r\n+  signInText: { color: \"#fff\", fontSize: 16, fontWeight: \"bold\" },\r\n+  divider: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 25 },\r\n+  line: { flex: 1, height: 1, backgroundColor: \"#D1D1D1\" },\r\n+  orText: { marginHorizontal: 10, color: \"#A0A0A0\" },\r\n+  signupPrompt: { textAlign: \"center\", fontSize: 14, color: \"#414141\" },\r\n+  signupLink: { color: \"#5089A3\", fontWeight: \"600\" },\r\n+});\r\n"
                },
                {
                    "date": 1746361873794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   Alert,\r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n-import API_BASE_URL from \"../../config\"; \r\n+import {API_BASE_URL} from \"../../config\"; \r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n export default function DLogin() {\r\n@@ -22,8 +22,9 @@\n   const router = useRouter();\r\n \r\n   const loginDriver = async () => {\r\n     try {\r\n+      console.log(\"API_BASE_URL is\", API_BASE_URL);\r\n       const response = await fetch(`${API_BASE_URL}/api/login/driver/login`, {\r\n         method: \"POST\",\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify({ email, password: pass }),\r\n@@ -147,156 +148,4 @@\n   orText: { marginHorizontal: 10, color: \"#A0A0A0\" },\r\n   signupPrompt: { textAlign: \"center\", fontSize: 14, color: \"#414141\" },\r\n   signupLink: { color: \"#5089A3\", fontWeight: \"600\" },\r\n });\r\n-import React, { useState } from \"react\";\r\n-import {\r\n-  View,\r\n-  Text,\r\n-  TouchableOpacity,\r\n-  StyleSheet,\r\n-  Dimensions,\r\n-  TextInput,\r\n-  StatusBar,\r\n-  Alert,\r\n-} from \"react-native\";\r\n-import { MaterialIcons } from \"@expo/vector-icons\";\r\n-import { useRouter } from \"expo-router\";\r\n-import API_BASE_URL from \"../../config\"; \r\n-\r\n-const { width } = Dimensions.get(\"window\");\r\n-\r\n-export default function DLogin() {\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [pass, setPass] = useState(\"\");\r\n-  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n-  const router = useRouter();\r\n-\r\n-  const loginDriver = async () => {\r\n-    try {\r\n-      const response = await fetch(`${API_BASE_URL}/api/login/driver/login`, {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email, password: pass }),\r\n-      });\r\n-\r\n-      const text = await response.text();\r\n-      let data;\r\n-      try {\r\n-        data = JSON.parse(text);\r\n-      } catch (e) {\r\n-        console.error(\"Server did not return JSON:\", text);\r\n-        throw new Error(\"Invalid server response: not JSON\");\r\n-      }\r\n-\r\n-      if (response.ok) {\r\n-        Alert.alert(\"Login Successful\", `Welcome, ${data.userType}!`);\r\n-        console.log(\"User ID:\", data.userId);\r\n-        console.log(\"User Type:\", data.userType);\r\n-\r\n-        // TODO: Save userId + userType if needed (AsyncStorage or Context)\r\n-\r\n-        router.push(\"../homedriver/dhome\"); \r\n-      } else {\r\n-        Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n-      }\r\n-\r\n-    } catch (error: any) {\r\n-      console.error(\"Login error (catch block):\", error);\r\n-      Alert.alert(\"Login Failed\", error.message || \"Network/server error\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <View style={styles.container}>\r\n-      <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n-      <View style={styles.inner}>\r\n-        <TouchableOpacity onPress={() => router.back()}>\r\n-          <Text style={styles.back}>Back</Text>\r\n-        </TouchableOpacity>\r\n-\r\n-        <Text style={styles.title}>Sign in with your Driver or Operator account</Text>\r\n-\r\n-        <View style={styles.inputContainer}>\r\n-          <TextInput\r\n-            style={styles.input}\r\n-            placeholder=\"Email\"\r\n-            placeholderTextColor=\"#A0A0A0\"\r\n-            value={email}\r\n-            onChangeText={setEmail}\r\n-          />\r\n-        </View>\r\n-\r\n-        <View style={styles.inputContainer}>\r\n-          <TextInput\r\n-            style={styles.input}\r\n-            placeholder=\"Enter Your Password\"\r\n-            placeholderTextColor=\"#A0A0A0\"\r\n-            secureTextEntry={!isPasswordVisible}\r\n-            value={pass}\r\n-            onChangeText={setPass}\r\n-          />\r\n-          <TouchableOpacity onPress={() => setIsPasswordVisible(prev => !prev)}>\r\n-            <MaterialIcons\r\n-              name={isPasswordVisible ? \"visibility\" : \"visibility-off\"}\r\n-              size={20}\r\n-              color=\"#A0A0A0\"\r\n-            />\r\n-          </TouchableOpacity>\r\n-        </View>\r\n-\r\n-        <TouchableOpacity style={styles.forgot}>\r\n-          <Text style={styles.forgotText}>Forget password?</Text>\r\n-        </TouchableOpacity>\r\n-\r\n-        <TouchableOpacity style={styles.signInBtn} onPress={loginDriver}>\r\n-          <Text style={styles.signInText}>Sign In</Text>\r\n-        </TouchableOpacity>\r\n-        <View style={styles.divider}>\r\n-          <View style={styles.line} />\r\n-          <Text style={styles.orText}>or</Text>\r\n-          <View style={styles.line} />\r\n-        </View>\r\n-\r\n-        <Text style={styles.signupPrompt}>\r\n-          Don't have an account?{\" \"}\r\n-          <Text style={styles.signupLink} onPress={() => router.push(\"/login_and_reg/dregister\")}>\r\n-            Sign Up\r\n-          </Text>\r\n-        </Text>\r\n-      </View>\r\n-    </View>\r\n-  );\r\n-}\r\n-\r\n-const styles = StyleSheet.create({\r\n-  container: { flex: 1, backgroundColor: \"#fff\", alignItems: \"center\" },\r\n-  inner: { width: width * 0.85, paddingTop: 60 },\r\n-  back: { fontSize: 16, color: \"#414141\", marginBottom: 20 },\r\n-  title: { fontSize: 20, color: \"#414141\", fontWeight: \"600\", marginBottom: 30 },\r\n-  inputContainer: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"#D1D1D1\",\r\n-    borderRadius: 8,\r\n-    paddingHorizontal: 10,\r\n-    height: 48,\r\n-    marginBottom: 15,\r\n-  },\r\n-  input: { flex: 1, fontSize: 16, color: \"#414141\" },\r\n-  forgot: { alignSelf: \"flex-end\", marginBottom: 30 },\r\n-  forgotText: { color: \"#DD1F1F\", fontSize: 13 },\r\n-  signInBtn: {\r\n-    backgroundColor: \"#5089A3\",\r\n-    borderRadius: 8,\r\n-    paddingVertical: 14,\r\n-    alignItems: \"center\",\r\n-    marginBottom: 25,\r\n-  },\r\n-  signInText: { color: \"#fff\", fontSize: 16, fontWeight: \"bold\" },\r\n-  divider: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 25 },\r\n-  line: { flex: 1, height: 1, backgroundColor: \"#D1D1D1\" },\r\n-  orText: { marginHorizontal: 10, color: \"#A0A0A0\" },\r\n-  signupPrompt: { textAlign: \"center\", fontSize: 14, color: \"#414141\" },\r\n-  signupLink: { color: \"#5089A3\", fontWeight: \"600\" },\r\n-});\r\n"
                },
                {
                    "date": 1747251529255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n   Alert,\r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n-import {API_BASE_URL} from \"../../config\"; \r\n+import { API_BASE_URL } from \"../../config\";\r\n+import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n \r\n const { width } = Dimensions.get(\"window\");\r\n \r\n export default function DLogin() {\r\n@@ -38,14 +39,12 @@\n         console.error(\"Server did not return JSON:\", text);\r\n         throw new Error(\"Invalid server response: not JSON\");\r\n       }\r\n \r\n-      if (response.ok) {\r\n-        Alert.alert(\"Login Successful\", `Welcome!`);\r\n-\r\n-        // TODO: Save userId + userType if needed (AsyncStorage or Context)\r\n-\r\n-        router.push(\"../homedriver/dhome\"); \r\n+      if (response.ok && data.driver && data.driver._id) {\r\n+        await AsyncStorage.setItem(\"driverId\", data.driver._id); // âœ… Store driverId\r\n+        Alert.alert(\"Login Successful\", \"Welcome!\");\r\n+        router.push(\"../homedriver/dhome\");\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n       }\r\n \r\n"
                },
                {
                    "date": 1747251913492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,10 @@\n         throw new Error(\"Invalid server response: not JSON\");\r\n       }\r\n \r\n       if (response.ok && data.driver && data.driver._id) {\r\n-        await AsyncStorage.setItem(\"driverId\", data.driver._id); // âœ… Store driverId\r\n+        await AsyncStorage.setItem(\"driverId\", data.driver._id);\r\n+        await AsyncStorage.setItem(\"driverName\", data.driver.driverName);\r\n         Alert.alert(\"Login Successful\", \"Welcome!\");\r\n         router.push(\"../homedriver/dhome\");\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n"
                },
                {
                    "date": 1747410449673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,8 @@\n       }\r\n \r\n       if (response.ok && data.driver && data.driver._id) {\r\n         await AsyncStorage.setItem(\"driverId\", data.driver._id);\r\n-        await AsyncStorage.setItem(\"driverName\", data.driver.driverName);\r\n         Alert.alert(\"Login Successful\", \"Welcome!\");\r\n         router.push(\"../homedriver/dhome\");\r\n       } else {\r\n         Alert.alert(\"Login Failed\", data.error || \"Invalid credentials\");\r\n"
                },
                {
                    "date": 1748322037065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   Dimensions,\r\n   TextInput,\r\n   StatusBar,\r\n   Alert,\r\n+  Keyboard \r\n } from \"react-native\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { useRouter } from \"expo-router\";\r\n import { API_BASE_URL } from \"../../config\";\r\n@@ -22,8 +23,9 @@\n   const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n   const router = useRouter();\r\n \r\n   const loginDriver = async () => {\r\n+    Keyboard.dismiss();\r\n     try {\r\n       console.log(\"API_BASE_URL is\", API_BASE_URL);\r\n       const response = await fetch(`${API_BASE_URL}/api/login/driver/login`, {\r\n         method: \"POST\",\r\n"
                },
                {
                    "date": 1748456694964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n   return (\r\n     <View style={styles.container}>\r\n       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\r\n       <View style={styles.inner}>\r\n-        <TouchableOpacity onPress={() => router.back()}>\r\n+        <TouchableOpacity onPress={() => router.push(\"../location/welcome\")}>\r\n           <Text style={styles.back}>Back</Text>\r\n         </TouchableOpacity>\r\n \r\n         <Text style={styles.title}>Sign in with your Driver or Operator account</Text>\r\n"
                }
            ],
            "date": 1743946962801,
            "name": "Commit-0",
            "content": ""
        }
    ]
}