{
    "sourceFile": "app/on_boarding/trdhome.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1743946674403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743946734796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,15 +53,15 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <View style={styles.mainUI}>\r\n         <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\r\n-            <Text style={styles.skip}>Skip</Text>\r\n+          <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\r\n         </TouchableOpacity>\r\n         <View style={styles.picont}>\r\n           <Image style={styles.pic} source={require('../../assets/images/pic3.png')} />\r\n         </View>\r\n-        <Text style={styles.made}>Book your Trike</Text>\r\n-        <Text style={styles.hassle}>Late ka na ba?</Text>\r\n+        <Text style={[styles.made, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Book your Trike</Text>\r\n+        <Text style={[styles.hassle, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Late ka na ba?</Text>\r\n         <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\r\n           <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\r\n             {/* Background Circle */}\r\n             <Circle\r\n"
                },
                {
                    "date": 1743946819159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <View style={styles.mainUI}>\r\n-        <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\r\n+        <TouchableOpacity onPress={() => router.push(\"../location/EL\")}>\r\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\r\n         </TouchableOpacity>\r\n         <View style={styles.picont}>\r\n           <Image style={styles.pic} source={require('../../assets/images/pic3.png')} />\r\n"
                },
                {
                    "date": 1743947717141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     <View>\r\n       <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n-      <View style={styles.mainUI}>\r\n+      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n         <TouchableOpacity onPress={() => router.push(\"../location/EL\")}>\r\n           <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\r\n         </TouchableOpacity>\r\n         <View style={styles.picont}>\r\n"
                },
                {
                    "date": 1743947795730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \r\n \r\n   return (\r\n     <View>\r\n-      <View style={{paddingTop: 30}}>\r\n+      <View style={{paddingTop: 40}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n         <TouchableOpacity onPress={() => router.push(\"../location/EL\")}>\r\n"
                },
                {
                    "date": 1743947804553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \r\n \r\n   return (\r\n     <View>\r\n-      <View style={{paddingTop: 40}}>\r\n+      <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n         <TouchableOpacity onPress={() => router.push(\"../location/EL\")}>\r\n"
                },
                {
                    "date": 1743947886177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n }\r\n const styles = StyleSheet.create({\r\n   mainUI:{\r\n     backgroundColor: '#f2f2f2',\r\n-    height: height,\r\n+    height: height + 10,\r\n     width: width,\r\n   },\r\n   skip: {\r\n     padding: 10,\r\n"
                },
                {
                    "date": 1743948456014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,15 +53,15 @@\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n         <TouchableOpacity onPress={() => router.push(\"../location/EL\")}>\r\n-          <Text style={[styles.skip, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Skip</Text>\r\n+          <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\r\n         </TouchableOpacity>\r\n         <View style={styles.picont}>\r\n           <Image style={styles.pic} source={require('../../assets/images/pic3.png')} />\r\n         </View>\r\n-        <Text style={[styles.made, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Book your Trike</Text>\r\n-        <Text style={[styles.hassle, { color: isDarkMode ? \"#fff\" : \"#414141\" }]}>Late ka na ba?</Text>\r\n+        <Text style={[styles.made, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Book your Trike</Text>\r\n+        <Text style={[styles.hassle, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Late ka na ba?</Text>\r\n         <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\r\n           <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\r\n             {/* Background Circle */}\r\n             <Circle\r\n"
                },
                {
                    "date": 1748458094865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,21 @@\n-import React, { useEffect, useState } from \"react\";\r\n-import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\r\n-import { StyleSheet, SafeAreaView, useColorScheme} from \"react-native\";\r\n+import React, { useEffect } from \"react\";\r\n+import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar, StyleSheet, useColorScheme } from \"react-native\";\r\n import Svg, { Circle } from \"react-native-svg\";\r\n import * as SplashScreen from \"expo-splash-screen\";\r\n import { useRouter } from \"expo-router\";\r\n-import Animated, {useSharedValue, useAnimatedProps, withTiming, Easing,} from \"react-native-reanimated\";\r\n+import Animated, { useSharedValue, useAnimatedProps, withTiming, Easing } from \"react-native-reanimated\";\r\n+import * as Location from \"expo-location\";\r\n import { Ionicons } from \"@expo/vector-icons\";\r\n-const { width } = Dimensions.get('window');\r\n-const { height } = Dimensions.get('window');\r\n-const size = 80; \r\n+\r\n+const { width, height } = Dimensions.get('window');\r\n+const size = 80;\r\n const strokeWidth = 6;\r\n const radius = (size - strokeWidth) / 2;\r\n const circumference = 2 * Math.PI * radius;\r\n const AnimatedCircle = Animated.createAnimatedComponent(Circle);\r\n \r\n-SplashScreen.preventAutoHideAsync(); \r\n+SplashScreen.preventAutoHideAsync();\r\n \r\n export default function trdhome() {\r\n   useEffect(() => {\r\n     async function loadApp() {\r\n@@ -23,17 +23,17 @@\n         await new Promise(resolve => setTimeout(resolve, 2000));\r\n       } catch (e) {\r\n         console.warn(e);\r\n       } finally {\r\n-        await SplashScreen.hideAsync(); \r\n+        await SplashScreen.hideAsync();\r\n       }\r\n     }\r\n     loadApp();\r\n   }, []);\r\n \r\n   const router = useRouter();\r\n+  const progress = useSharedValue(0);\r\n \r\n-  const progress = useSharedValue(0);\r\n   useEffect(() => {\r\n     progress.value = withTiming(1, {\r\n       duration: 1000,\r\n       easing: Easing.linear,\r\n@@ -42,38 +42,53 @@\n \r\n   const animatedProps = useAnimatedProps(() => ({\r\n     strokeDashoffset: circumference * (1 - progress.value),\r\n   }));\r\n+\r\n   const colorScheme = useColorScheme();\r\n   const isDarkMode = colorScheme === 'dark';\r\n \r\n+  const handleLocationFlow = async () => {\r\n+    try {\r\n+      const { status } = await Location.getForegroundPermissionsAsync();\r\n+      const isEnabled = await Location.hasServicesEnabledAsync();\r\n \r\n+      if (status === \"granted\" && isEnabled) {\r\n+        router.push(\"/location/welcome\");\r\n+      } else {\r\n+        router.push(\"/location/EL\");\r\n+      }\r\n+    } catch (error) {\r\n+      console.warn(\"Location check failed:\", error);\r\n+      router.push(\"/location/EL\");\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <View>\r\n-      <View style={{paddingTop: 30}}>\r\n+    <ScrollView style={{ flex: 1 }} contentContainerStyle={{ flexGrow: 1 }}>\r\n+      <View style={{ paddingTop: 30 }}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n-      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#1E1E1E\" : \"#f2f2f2\" }]}>\r\n-        <TouchableOpacity onPress={() => router.push(\"../location/EL\")}>\r\n+      <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\r\n+        <TouchableOpacity onPress={handleLocationFlow}>\r\n           <Text style={[styles.skip, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Skip</Text>\r\n         </TouchableOpacity>\r\n         <View style={styles.picont}>\r\n           <Image style={styles.pic} source={require('../../assets/images/pic3.png')} />\r\n         </View>\r\n         <Text style={[styles.made, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Book your Trike</Text>\r\n         <Text style={[styles.hassle, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Late ka na ba?</Text>\r\n-        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\r\n+\r\n+        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1, marginVertical: 20 }}>\r\n           <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\r\n-            {/* Background Circle */}\r\n             <Circle\r\n               cx={size / 2}\r\n               cy={size / 2}\r\n               r={radius}\r\n               stroke=\"#5EA7C9\"\r\n               strokeWidth={strokeWidth}\r\n               fill=\"none\"\r\n             />\r\n-            {/* Animated Progress Circle */}\r\n             <AnimatedCircle\r\n               cx={size / 2}\r\n               cy={size / 2}\r\n               r={radius}\r\n@@ -85,9 +100,8 @@\n               strokeLinecap=\"round\"\r\n             />\r\n           </Svg>\r\n \r\n-          {/* Center Button */}\r\n           <TouchableOpacity\r\n             style={{\r\n               position: \"absolute\",\r\n               width: size * 0.8,\r\n@@ -96,28 +110,28 @@\n               borderRadius: 40,\r\n               alignItems: \"center\",\r\n               justifyContent: \"center\",\r\n             }}\r\n-            onPress={() => router.push(\"/location/EL\")}\r\n+            onPress={handleLocationFlow}\r\n           >\r\n             <Ionicons name=\"arrow-forward\" size={32} color=\"white\" />\r\n           </TouchableOpacity>\r\n         </View>\r\n       </View>\r\n-    </View>\r\n+    </ScrollView>\r\n   );\r\n }\r\n+\r\n const styles = StyleSheet.create({\r\n-  mainUI:{\r\n+  mainUI: {\r\n     backgroundColor: '#f2f2f2',\r\n-    height: height + 10,\r\n     width: width,\r\n   },\r\n   skip: {\r\n+    paddingTop: 20,\r\n     padding: 10,\r\n     fontSize: 18,\r\n     fontFamily: \"Poppins-Regular\",\r\n-    color: \"#414141\",\r\n     letterSpacing: 1,\r\n     textAlign: 'right',\r\n   },\r\n   picont: {\r\n@@ -130,13 +144,11 @@\n     height: width,\r\n     backgroundColor: 'transparent',\r\n   },\r\n   made: {\r\n-    marginTop: -60,\r\n     fontSize: 24,\r\n     fontFamily: \"Poppins-Bold\",\r\n     fontWeight: \"bold\",\r\n-    color: \"#414141\",\r\n     textTransform: \"uppercase\",\r\n     textAlign: \"center\",\r\n   },\r\n   hassle: {\r\n@@ -145,5 +157,5 @@\n     color: \"#A0A0A0\",\r\n     textAlign: \"center\",\r\n     marginTop: 5,\r\n   },\r\n-})\n\\ No newline at end of file\n+});\r\n"
                },
                {
                    "date": 1748463434549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,22 @@\n-import React, { useEffect } from \"react\";\r\n-import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar, StyleSheet, useColorScheme } from \"react-native\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\r\n+import { StyleSheet, SafeAreaView, useColorScheme} from \"react-native\";\r\n import Svg, { Circle } from \"react-native-svg\";\r\n import * as SplashScreen from \"expo-splash-screen\";\r\n import { useRouter } from \"expo-router\";\r\n-import Animated, { useSharedValue, useAnimatedProps, withTiming, Easing } from \"react-native-reanimated\";\r\n+import Animated, {useSharedValue, useAnimatedProps, withTiming, Easing,} from \"react-native-reanimated\";\r\n import * as Location from \"expo-location\";\r\n import { Ionicons } from \"@expo/vector-icons\";\r\n-\r\n-const { width, height } = Dimensions.get('window');\r\n-const size = 80;\r\n+const { width } = Dimensions.get('window');\r\n+const { height } = Dimensions.get('window');\r\n+const size = 80; \r\n const strokeWidth = 6;\r\n const radius = (size - strokeWidth) / 2;\r\n const circumference = 2 * Math.PI * radius;\r\n const AnimatedCircle = Animated.createAnimatedComponent(Circle);\r\n \r\n-SplashScreen.preventAutoHideAsync();\r\n+SplashScreen.preventAutoHideAsync(); \r\n \r\n export default function trdhome() {\r\n   useEffect(() => {\r\n     async function loadApp() {\r\n@@ -23,17 +24,17 @@\n         await new Promise(resolve => setTimeout(resolve, 2000));\r\n       } catch (e) {\r\n         console.warn(e);\r\n       } finally {\r\n-        await SplashScreen.hideAsync();\r\n+        await SplashScreen.hideAsync(); \r\n       }\r\n     }\r\n     loadApp();\r\n   }, []);\r\n \r\n   const router = useRouter();\r\n+\r\n   const progress = useSharedValue(0);\r\n-\r\n   useEffect(() => {\r\n     progress.value = withTiming(1, {\r\n       duration: 1000,\r\n       easing: Easing.linear,\r\n@@ -42,31 +43,33 @@\n \r\n   const animatedProps = useAnimatedProps(() => ({\r\n     strokeDashoffset: circumference * (1 - progress.value),\r\n   }));\r\n-\r\n   const colorScheme = useColorScheme();\r\n   const isDarkMode = colorScheme === 'dark';\r\n-\r\n   const handleLocationFlow = async () => {\r\n     try {\r\n       const { status } = await Location.getForegroundPermissionsAsync();\r\n       const isEnabled = await Location.hasServicesEnabledAsync();\r\n-\r\n+  \r\n       if (status === \"granted\" && isEnabled) {\r\n+        // Location is already enabled, go directly to welcome\r\n         router.push(\"/location/welcome\");\r\n       } else {\r\n+        // Location not enabled, show the enable location page\r\n         router.push(\"/location/EL\");\r\n       }\r\n     } catch (error) {\r\n       console.warn(\"Location check failed:\", error);\r\n-      router.push(\"/location/EL\");\r\n+      router.push(\"/location/EL\"); // fallback\r\n     }\r\n   };\r\n+  \r\n \r\n+\r\n   return (\r\n-    <ScrollView style={{ flex: 1 }} contentContainerStyle={{ flexGrow: 1 }}>\r\n-      <View style={{ paddingTop: 30 }}>\r\n+    <View>\r\n+      <View style={{paddingTop: 30}}>\r\n         <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n       </View>\r\n       <View style={[styles.mainUI, { backgroundColor: isDarkMode ? \"#313639\" : \"#f2f2f2\" }]}>\r\n         <TouchableOpacity onPress={handleLocationFlow}>\r\n@@ -76,19 +79,20 @@\n           <Image style={styles.pic} source={require('../../assets/images/pic3.png')} />\r\n         </View>\r\n         <Text style={[styles.made, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Book your Trike</Text>\r\n         <Text style={[styles.hassle, { color: isDarkMode ? \"#f2f2f2\" : \"#414141\" }]}>Late ka na ba?</Text>\r\n-\r\n-        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1, marginVertical: 20 }}>\r\n+        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\r\n           <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\r\n+            {/* Background Circle */}\r\n             <Circle\r\n               cx={size / 2}\r\n               cy={size / 2}\r\n               r={radius}\r\n               stroke=\"#5EA7C9\"\r\n               strokeWidth={strokeWidth}\r\n               fill=\"none\"\r\n             />\r\n+            {/* Animated Progress Circle */}\r\n             <AnimatedCircle\r\n               cx={size / 2}\r\n               cy={size / 2}\r\n               r={radius}\r\n@@ -100,8 +104,9 @@\n               strokeLinecap=\"round\"\r\n             />\r\n           </Svg>\r\n \r\n+          {/* Center Button */}\r\n           <TouchableOpacity\r\n             style={{\r\n               position: \"absolute\",\r\n               width: size * 0.8,\r\n@@ -116,22 +121,23 @@\n             <Ionicons name=\"arrow-forward\" size={32} color=\"white\" />\r\n           </TouchableOpacity>\r\n         </View>\r\n       </View>\r\n-    </ScrollView>\r\n+    </View>\r\n   );\r\n }\r\n-\r\n const styles = StyleSheet.create({\r\n-  mainUI: {\r\n+  mainUI:{\r\n     backgroundColor: '#f2f2f2',\r\n+    height: height + 10,\r\n     width: width,\r\n   },\r\n   skip: {\r\n     paddingTop: 20,\r\n     padding: 10,\r\n     fontSize: 18,\r\n     fontFamily: \"Poppins-Regular\",\r\n+    color: \"#414141\",\r\n     letterSpacing: 1,\r\n     textAlign: 'right',\r\n   },\r\n   picont: {\r\n@@ -147,8 +153,9 @@\n   made: {\r\n     fontSize: 24,\r\n     fontFamily: \"Poppins-Bold\",\r\n     fontWeight: \"bold\",\r\n+    color: \"#414141\",\r\n     textTransform: \"uppercase\",\r\n     textAlign: \"center\",\r\n   },\r\n   hassle: {\r\n@@ -157,5 +164,5 @@\n     color: \"#A0A0A0\",\r\n     textAlign: \"center\",\r\n     marginTop: 5,\r\n   },\r\n-});\r\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1748463596030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n     textAlign: 'right',\r\n   },\r\n   picont: {\r\n     width: width,\r\n-    paddingTop: 50,\r\n+    paddingTop: 30,\r\n     backgroundColor: 'transparent',\r\n   },\r\n   pic: {\r\n     width: width,\r\n"
                }
            ],
            "date": 1743946674403,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, Image, ScrollView, Dimensions, TouchableOpacity, StatusBar } from \"react-native\";\r\nimport { StyleSheet, SafeAreaView, useColorScheme} from \"react-native\";\r\nimport Svg, { Circle } from \"react-native-svg\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport { useRouter } from \"expo-router\";\r\nimport Animated, {useSharedValue, useAnimatedProps, withTiming, Easing,} from \"react-native-reanimated\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nconst { width } = Dimensions.get('window');\r\nconst { height } = Dimensions.get('window');\r\nconst size = 80; \r\nconst strokeWidth = 6;\r\nconst radius = (size - strokeWidth) / 2;\r\nconst circumference = 2 * Math.PI * radius;\r\nconst AnimatedCircle = Animated.createAnimatedComponent(Circle);\r\n\r\nSplashScreen.preventAutoHideAsync(); \r\n\r\nexport default function trdhome() {\r\n  useEffect(() => {\r\n    async function loadApp() {\r\n      try {\r\n        await new Promise(resolve => setTimeout(resolve, 2000));\r\n      } catch (e) {\r\n        console.warn(e);\r\n      } finally {\r\n        await SplashScreen.hideAsync(); \r\n      }\r\n    }\r\n    loadApp();\r\n  }, []);\r\n\r\n  const router = useRouter();\r\n\r\n  const progress = useSharedValue(0);\r\n  useEffect(() => {\r\n    progress.value = withTiming(1, {\r\n      duration: 1000,\r\n      easing: Easing.linear,\r\n    });\r\n  }, []);\r\n\r\n  const animatedProps = useAnimatedProps(() => ({\r\n    strokeDashoffset: circumference * (1 - progress.value),\r\n  }));\r\n  const colorScheme = useColorScheme();\r\n  const isDarkMode = colorScheme === 'dark';\r\n\r\n\r\n  return (\r\n    <View>\r\n      <View style={{paddingTop: 30}}>\r\n        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor=\"black\" />\r\n      </View>\r\n      <View style={styles.mainUI}>\r\n        <TouchableOpacity onPress={() => router.push(\"/location/EL\")}>\r\n            <Text style={styles.skip}>Skip</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.picont}>\r\n          <Image style={styles.pic} source={require('../../assets/images/pic3.png')} />\r\n        </View>\r\n        <Text style={styles.made}>Book your Trike</Text>\r\n        <Text style={styles.hassle}>Late ka na ba?</Text>\r\n        <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\r\n          <Svg width={size} height={size} style={{ transform: [{ rotate: \"-90deg\" }] }}>\r\n            {/* Background Circle */}\r\n            <Circle\r\n              cx={size / 2}\r\n              cy={size / 2}\r\n              r={radius}\r\n              stroke=\"#5EA7C9\"\r\n              strokeWidth={strokeWidth}\r\n              fill=\"none\"\r\n            />\r\n            {/* Animated Progress Circle */}\r\n            <AnimatedCircle\r\n              cx={size / 2}\r\n              cy={size / 2}\r\n              r={radius}\r\n              stroke=\"#00537A\"\r\n              strokeWidth={strokeWidth}\r\n              fill=\"none\"\r\n              strokeDasharray={circumference}\r\n              animatedProps={animatedProps}\r\n              strokeLinecap=\"round\"\r\n            />\r\n          </Svg>\r\n\r\n          {/* Center Button */}\r\n          <TouchableOpacity\r\n            style={{\r\n              position: \"absolute\",\r\n              width: size * 0.8,\r\n              height: size * 0.8,\r\n              backgroundColor: \"#00537A\",\r\n              borderRadius: 40,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            onPress={() => router.push(\"/location/EL\")}\r\n          >\r\n            <Ionicons name=\"arrow-forward\" size={32} color=\"white\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  mainUI:{\r\n    backgroundColor: '#f2f2f2',\r\n    height: height,\r\n    width: width,\r\n  },\r\n  skip: {\r\n    padding: 10,\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Regular\",\r\n    color: \"#414141\",\r\n    letterSpacing: 1,\r\n    textAlign: 'right',\r\n  },\r\n  picont: {\r\n    width: width,\r\n    paddingTop: 50,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  pic: {\r\n    width: width,\r\n    height: width,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  made: {\r\n    marginTop: -60,\r\n    fontSize: 24,\r\n    fontFamily: \"Poppins-Bold\",\r\n    fontWeight: \"bold\",\r\n    color: \"#414141\",\r\n    textTransform: \"uppercase\",\r\n    textAlign: \"center\",\r\n  },\r\n  hassle: {\r\n    fontSize: 14,\r\n    fontFamily: \"Poppins-Regular\",\r\n    color: \"#A0A0A0\",\r\n    textAlign: \"center\",\r\n    marginTop: 5,\r\n  },\r\n})"
        }
    ]
}